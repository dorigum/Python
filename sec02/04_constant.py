# 상수 : 변경되지 않는 값
# 파이썬에는 별도의 상수가 없음
# 변수와 구분하기 위해서 대문자로 사용할 뿐
# 나중에 값을 변경해도 오류 없음
PI = 3.141592

r = 10
area = r * r * PI
print(area)

# 예) 이자율 값을 여러 곳에서 사용할 경우
# 직접 값을 입력한다면
# 어느 한 곳에서 잘못 입력할 경우 큰 문제 발생
# 일정한 값을 여러 번 사용해야 할 경우에는 상수로 만들어 놓고 사용

# 리터럴 (literal) : 값 자체
# 정수 리터럴 : 10, 100, 10000
# 실수 리터럴 : 0.25, 3.14
# 문자열 리터럴 : "홍길동", 'abcd'
# - 큰 따옴표, 작은 따옴표 사용 가능
# 논리값 리터럴 : True, False (대문자로 시작)
# 특수 리터럴 : None (값(객체) 없음)

# 주석문 : 1줄 주석 # 사용
# 여러 줄 주석 :
""""파이썬 프로그래밍"""
'''파이썬 프로그래밍'''

# 행 분리 : 1줄의 내용이 긴 경우, 여러 행으로 분리 가능
# - 역 슬래시 또는 괄호 사용
a = 1 + 2 + 3 + \
    4 + 5 + 6
print(a)

b = (1 + 2 + 3 +
     4 + 5 + 6)
print(b)

# print() 함수에서 여러 행으로 입력
# 문자열 중간에서 엔터키치면 다음 행으로 이동
# 자동으로 "" 처리되면서 1줄로 인식
# 실행시킬 때는 전체 드래그해서 실행
print("긴 문장을 입력할 때 중간에서 엔터키를 치면 "
      "다음 행으로 이동하고 자동으로 따옴표 처리되면서 "
      "1줄로 인식")

# 특수문자 (이스케이프 문자) : 문자 앞에 역 슬래시 사용
# \\
# \'
# \"
# \n
# \t

# 주의할 점 : 따옴표를 겹쳐서 사용할 때
# - 겉에 큰 따옴표 사용했으면 안에는 작은 따옴표 사용
# - 겉에 작은 따옴표 사용했으면 안에는 큰 따옴표 사용
# - 아니면 특수문자 사용

word = "doesn't"
print(word)

# 특수 문자 의미 없애기
print("C:\info\name") # \n을 특수문자 줄 바꿈으로 해석

# \n을 특수문자로 해석하지 않도록
# 첫번째 따옴표 앞에 r 추가
print(r"C:\info\name")

# 2개의 문장을 한 줄에 입력 시 오류 발생
# 행 결합 : 세미콜론(;)을 사용해서 한 행에 입력 가능
print("홍길동"); print("이몽룡")

# print() 함수 : 옆으로 출력
print("first")
print("second")

print("first", end=", ")
print("second")